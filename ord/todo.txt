ToDo:
=====

This software works fine exactly as it is, but could be better. If I were to come back to this project, these are some problems and ideas I might address. Keep in mind that the focus is ease of use at the game table, rather than having a feature rich environment. Complexity of use and of the code base should only increase with great consideration to how it will affect both users and maintainers. I've intentionally avoided writing anything like a lexer and have even avoided using regular expression except where they made the code easier to understand.


Capability
----------
* Add macro style importing from other *.init files so that party.init can contain party information for all dungeon rooms and random encounters.
  > Consider pound sign followed by quoted path. `# "../inc/party.init"`
* Allow inline and multi-line comments as used in C. i.e., double forward slash (//) to ignore rest of line and forward slash asterisk (/* ... */) to span one or more lines.
* Ensure that file paths, input, and output work across various platforms.


Strictness/Enforcement
----------------------
* Require [namewords, bonus, keywords] ordering of terms.
* Error if multiple bonuses.
* Error if duplicate keywords or reduce them to one in data structure. `if not in actor['kw']: actor['kw'].append(keyword)`
* Error if conflicting keywords. `adv` and `disadv` should raise error, rather than cancelling eachother.
